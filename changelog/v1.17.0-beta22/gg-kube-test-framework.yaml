changelog:
  - type: DEPENDENCY_BUMP
    dependencyOwner: onsi
    dependencyRepo: ginkgo/v2
    dependencyTag: v2.17.0
  - type: DEPENDENCY_BUMP
    dependencyOwner: onsi
    dependencyRepo: gomega
    dependencyTag: v1.30.0
  - type: DEPENDENCY_BUMP
    dependencyOwner: golang.org
    dependencyRepo: x/crypto
    dependencyTag: v0.18.0
  - type: DEPENDENCY_BUMP
    dependencyOwner: golang.org
    dependencyRepo: x/sync
    dependencyTag: v0.6.0
  - type: DEPENDENCY_BUMP
    dependencyOwner: golang.org
    dependencyRepo: x/tools
    dependencyTag: v0.17.0
  - type: NON_USER_FACING
    issueLink: https://github.com/solo-io/solo-projects/issues/6029
    resolvesIssue: false
    description: >-
      Introduce a test framework, which will be used as the foundation of writing tests
      that assert feature parity between Edge Gateway API resources and Kubernetes Gateway API resources.
  - type: NON_USER_FACING
    issueLink: https://github.com/solo-io/solo-projects/issues/6037
    resolvesIssue: false
    description: >-
      Ensure the test framework follows the Open/Closed principle, in that it is open for Extension.
      This way, we can implement custom Enterprise functionality to assert Enterprise-only behaviors.
  - type: NON_USER_FACING
    issueLink: https://github.com/solo-io/solo-projects/issues/6027
    resolvesIssue: false
    description: >-
      Introduce an example suite, which relies on the new test framework, to demonstrate how it works.
  - type: NON_USER_FACING
    issueLink: https://github.com/solo-io/solo-projects/issues/6029
    resolvesIssue: false
    description: >-
      Iterate on the test framework, and introduce some basic tests for asserting behavior about provisioned proxies.
  - type: NON_USER_FACING
    issueLink: https://github.com/solo-io/solo-projects/issues/6003
    resolvesIssue: false
    description: >-
      Fix the readinessProbe defined on the proxy deployments that are provisioned by the K8s Gateway integration.
      The previous probe was invalid, causing Pods to not become ready.
  - type: NON_USER_FACING
    issueLink: https://github.com/solo-io/gloo/issues/9353
    resolvesIssue: false
    description: >-
      Adjust the port-forward utility to only return pods that are both running and ready. This should adjust
      the chance that a port-forward is opened, and then clients fail to connect to the remote server.