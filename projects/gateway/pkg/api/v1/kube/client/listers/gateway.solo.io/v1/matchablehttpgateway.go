/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/solo-io/gloo/projects/gateway/pkg/api/v1/kube/apis/gateway.solo.io/v1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// MatchableHttpGatewayLister helps list MatchableHttpGateways.
// All objects returned here must be treated as read-only.
type MatchableHttpGatewayLister interface {
	// List lists all MatchableHttpGateways in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.MatchableHttpGateway, err error)
	// MatchableHttpGateways returns an object that can list and get MatchableHttpGateways.
	MatchableHttpGateways(namespace string) MatchableHttpGatewayNamespaceLister
	MatchableHttpGatewayListerExpansion
}

// matchableHttpGatewayLister implements the MatchableHttpGatewayLister interface.
type matchableHttpGatewayLister struct {
	listers.ResourceIndexer[*v1.MatchableHttpGateway]
}

// NewMatchableHttpGatewayLister returns a new MatchableHttpGatewayLister.
func NewMatchableHttpGatewayLister(indexer cache.Indexer) MatchableHttpGatewayLister {
	return &matchableHttpGatewayLister{listers.New[*v1.MatchableHttpGateway](indexer, v1.Resource("matchablehttpgateway"))}
}

// MatchableHttpGateways returns an object that can list and get MatchableHttpGateways.
func (s *matchableHttpGatewayLister) MatchableHttpGateways(namespace string) MatchableHttpGatewayNamespaceLister {
	return matchableHttpGatewayNamespaceLister{listers.NewNamespaced[*v1.MatchableHttpGateway](s.ResourceIndexer, namespace)}
}

// MatchableHttpGatewayNamespaceLister helps list and get MatchableHttpGateways.
// All objects returned here must be treated as read-only.
type MatchableHttpGatewayNamespaceLister interface {
	// List lists all MatchableHttpGateways in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.MatchableHttpGateway, err error)
	// Get retrieves the MatchableHttpGateway from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.MatchableHttpGateway, error)
	MatchableHttpGatewayNamespaceListerExpansion
}

// matchableHttpGatewayNamespaceLister implements the MatchableHttpGatewayNamespaceLister
// interface.
type matchableHttpGatewayNamespaceLister struct {
	listers.ResourceIndexer[*v1.MatchableHttpGateway]
}
