/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/solo-io/gloo/projects/gateway/pkg/api/v1/kube/apis/gateway.solo.io/v1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// HttpListenerOptionLister helps list HttpListenerOptions.
// All objects returned here must be treated as read-only.
type HttpListenerOptionLister interface {
	// List lists all HttpListenerOptions in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.HttpListenerOption, err error)
	// HttpListenerOptions returns an object that can list and get HttpListenerOptions.
	HttpListenerOptions(namespace string) HttpListenerOptionNamespaceLister
	HttpListenerOptionListerExpansion
}

// httpListenerOptionLister implements the HttpListenerOptionLister interface.
type httpListenerOptionLister struct {
	listers.ResourceIndexer[*v1.HttpListenerOption]
}

// NewHttpListenerOptionLister returns a new HttpListenerOptionLister.
func NewHttpListenerOptionLister(indexer cache.Indexer) HttpListenerOptionLister {
	return &httpListenerOptionLister{listers.New[*v1.HttpListenerOption](indexer, v1.Resource("httplisteneroption"))}
}

// HttpListenerOptions returns an object that can list and get HttpListenerOptions.
func (s *httpListenerOptionLister) HttpListenerOptions(namespace string) HttpListenerOptionNamespaceLister {
	return httpListenerOptionNamespaceLister{listers.NewNamespaced[*v1.HttpListenerOption](s.ResourceIndexer, namespace)}
}

// HttpListenerOptionNamespaceLister helps list and get HttpListenerOptions.
// All objects returned here must be treated as read-only.
type HttpListenerOptionNamespaceLister interface {
	// List lists all HttpListenerOptions in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.HttpListenerOption, err error)
	// Get retrieves the HttpListenerOption from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.HttpListenerOption, error)
	HttpListenerOptionNamespaceListerExpansion
}

// httpListenerOptionNamespaceLister implements the HttpListenerOptionNamespaceLister
// interface.
type httpListenerOptionNamespaceLister struct {
	listers.ResourceIndexer[*v1.HttpListenerOption]
}
