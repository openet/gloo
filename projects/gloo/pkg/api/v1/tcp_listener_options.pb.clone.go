// Code generated by protoc-gen-ext. DO NOT EDIT.
// source: github.com/solo-io/gloo/projects/gloo/api/v1/tcp_listener_options.proto

package v1

import (
	"bytes"
	"encoding/binary"
	"errors"
	"fmt"
	"strings"

	"github.com/solo-io/protoc-gen-ext/pkg/clone"
	"google.golang.org/protobuf/proto"

	github_com_solo_io_gloo_projects_gloo_pkg_api_v1_options_connection_limit "github.com/solo-io/gloo/projects/gloo/pkg/api/v1/options/connection_limit"

	github_com_solo_io_gloo_projects_gloo_pkg_api_v1_options_local_ratelimit "github.com/solo-io/gloo/projects/gloo/pkg/api/v1/options/local_ratelimit"

	github_com_solo_io_gloo_projects_gloo_pkg_api_v1_options_tcp "github.com/solo-io/gloo/projects/gloo/pkg/api/v1/options/tcp"
)

// ensure the imports are used
var (
	_ = errors.New("")
	_ = fmt.Print
	_ = binary.LittleEndian
	_ = bytes.Compare
	_ = strings.Compare
	_ = clone.Cloner(nil)
	_ = proto.Message(nil)
)

// Clone function
func (m *TcpListenerOptions) Clone() proto.Message {
	var target *TcpListenerOptions
	if m == nil {
		return target
	}
	target = &TcpListenerOptions{}

	if h, ok := interface{}(m.GetTcpProxySettings()).(clone.Cloner); ok {
		target.TcpProxySettings = h.Clone().(*github_com_solo_io_gloo_projects_gloo_pkg_api_v1_options_tcp.TcpProxySettings)
	} else {
		target.TcpProxySettings = proto.Clone(m.GetTcpProxySettings()).(*github_com_solo_io_gloo_projects_gloo_pkg_api_v1_options_tcp.TcpProxySettings)
	}

	if h, ok := interface{}(m.GetConnectionLimit()).(clone.Cloner); ok {
		target.ConnectionLimit = h.Clone().(*github_com_solo_io_gloo_projects_gloo_pkg_api_v1_options_connection_limit.ConnectionLimit)
	} else {
		target.ConnectionLimit = proto.Clone(m.GetConnectionLimit()).(*github_com_solo_io_gloo_projects_gloo_pkg_api_v1_options_connection_limit.ConnectionLimit)
	}

	if h, ok := interface{}(m.GetLocalRatelimit()).(clone.Cloner); ok {
		target.LocalRatelimit = h.Clone().(*github_com_solo_io_gloo_projects_gloo_pkg_api_v1_options_local_ratelimit.TokenBucket)
	} else {
		target.LocalRatelimit = proto.Clone(m.GetLocalRatelimit()).(*github_com_solo_io_gloo_projects_gloo_pkg_api_v1_options_local_ratelimit.TokenBucket)
	}

	return target
}
