/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/solo-io/gloo/projects/gloo/pkg/api/v1/kube/apis/gloo.solo.io/v1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// ArtifactLister helps list Artifacts.
// All objects returned here must be treated as read-only.
type ArtifactLister interface {
	// List lists all Artifacts in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Artifact, err error)
	// Artifacts returns an object that can list and get Artifacts.
	Artifacts(namespace string) ArtifactNamespaceLister
	ArtifactListerExpansion
}

// artifactLister implements the ArtifactLister interface.
type artifactLister struct {
	listers.ResourceIndexer[*v1.Artifact]
}

// NewArtifactLister returns a new ArtifactLister.
func NewArtifactLister(indexer cache.Indexer) ArtifactLister {
	return &artifactLister{listers.New[*v1.Artifact](indexer, v1.Resource("artifact"))}
}

// Artifacts returns an object that can list and get Artifacts.
func (s *artifactLister) Artifacts(namespace string) ArtifactNamespaceLister {
	return artifactNamespaceLister{listers.NewNamespaced[*v1.Artifact](s.ResourceIndexer, namespace)}
}

// ArtifactNamespaceLister helps list and get Artifacts.
// All objects returned here must be treated as read-only.
type ArtifactNamespaceLister interface {
	// List lists all Artifacts in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Artifact, err error)
	// Get retrieves the Artifact from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.Artifact, error)
	ArtifactNamespaceListerExpansion
}

// artifactNamespaceLister implements the ArtifactNamespaceLister
// interface.
type artifactNamespaceLister struct {
	listers.ResourceIndexer[*v1.Artifact]
}
