{{- define "gloo.gatewayCertGenJobSpec" -}}
{{- if and .Values.gateway.enabled .Values.gateway.validation.enabled .Values.gateway.certGenJob.enabled }}

{{- $image := .Values.gateway.certGenJob.image }}
{{- if .Values.global  }}
{{- $image = merge .Values.gateway.certGenJob.image .Values.global.image }}
{{- end }}
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: gloo
    gloo: gateway-certgen
  name: gateway-certgen
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  {{- include "gloo.jobSpecStandardFields" .Values.gateway.certGenJob | nindent 2 -}}
  template:
    metadata:
      labels:
        gloo: gateway-certgen
        sidecar.istio.io/inject: "false"
        {{- if .Values.gateway.certGenJob.extraPodLabels }}
        {{- range $key, $value := .Values.gateway.certGenJob.extraPodLabels }}
        {{ $key | quote }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
      {{- if or .Values.settings.linkerd .Values.gateway.certGenJob.extraPodAnnotations }}
      annotations:
        {{- if .Values.settings.linkerd }}
        "linkerd.io/inject": disabled
        {{- end }}
        {{- range $key, $value := .Values.gateway.certGenJob.extraPodAnnotations }}
        {{ $key | quote }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
    spec:
      {{- include "gloo.pullSecret" $image | nindent 6 -}}
      serviceAccountName: certgen
      {{- include "gloo.podSpecStandardFields" .Values.gateway.certGenJob | nindent 6 -}}
      containers:
        - image: {{template "gloo.image" $image}}
          imagePullPolicy: {{ $image.pullPolicy }}
          name: certgen
          securityContext:
            runAsNonRoot: true
            {{- if not .Values.gateway.certGenJob.floatingUserId }}
            runAsUser: {{ printf "%.0f" (float64 .Values.gateway.certGenJob.runAsUser) -}}
            {{- end }}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          args:
            - "--secret-name={{ .Values.gateway.validation.secretName }}"
            - "--svc-name=gloo"
            - "--validating-webhook-configuration-name=gloo-gateway-validation-webhook-{{ .Release.Namespace }}"
{{- with .Values.gateway.certGenJob.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
        {{- with .Values.gateway.certGenJob.resources }}
          resources: {{ toYaml . | nindent 12}}
        {{- end }}
{{- end }} {{/* if and gateway.enabled gateway.validation.enabled gateway.certGenJob.enabled */}}
{{- end }} {{/* define "gloo.gatewayCertGenJobSpec" */}}

{{- if or (and .Values.gateway.enabled .Values.gateway.validation.enabled .Values.gateway.certGenJob.enabled) (.Values.global.glooMtls.enabled) }}
---
{{- if .Values.global.glooRbac.create }}
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "5" # must be executed before cert-gen job
  name: certgen
  namespace: {{ $.Release.Namespace }}

---

{{- if not .Values.global.glooRbac.namespaced -}}
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-gateway-vwc-update{{ include "gloo.rbacNameSuffix" . }}
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "5" # must be executed before cert-gen job
subjects:
- kind: ServiceAccount
  name: certgen
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: gloo-gateway-vwc-update{{ include "gloo.rbacNameSuffix" . }}
  apiGroup: rbac.authorization.k8s.io

---
{{- end -}}{{/*- if not .Values.global.glooRbac.namespaced -*/}}

kind: {{ include "gloo.roleKind" . }}Binding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-gateway-secret-create{{ include "gloo.rbacNameSuffix" . }}
  {{- if .Values.global.glooRbac.namespaced }}
  namespace: {{ .Release.Namespace }}
  {{- end }}
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "5" # must be executed before cert-gen job
subjects:
  - kind: ServiceAccount
    name: certgen
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: {{ include "gloo.roleKind" . }}
  name: gloo-gateway-secret-create{{ include "gloo.rbacNameSuffix" . }}
  apiGroup: rbac.authorization.k8s.io

---

{{- if not .Values.global.glooRbac.namespaced -}}
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-gateway-vwc-update{{ include "gloo.rbacNameSuffix" . }}
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "5" # must be executed before cert-gen job
rules:
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["validatingwebhookconfigurations"]
  verbs: ["get", "update"]

---
{{- end -}}{{/*- if not .Values.global.glooRbac.namespaced -*/}}

kind: {{ include "gloo.roleKind" . }}
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-gateway-secret-create{{ include "gloo.rbacNameSuffix" . }}
{{- if .Values.global.glooRbac.namespaced }}
  namespace: {{ .Release.Namespace }}
{{- end }}
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "5" # must be executed before cert-gen job
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create", "get", "update"]

---

{{- end }} {{/* .Values.global.glooRbac.create */}}
{{- end }} {{/* {{- if or (and gateway.enabled validation.enabled certGenJob.enabled glooMtls.enabled */}}

{{/* Render template with yaml overrides */}}
{{- $kubeResourceOverride := dict -}}
{{- if .Values.gateway.certGenJob -}}
{{- $kubeResourceOverride = .Values.gateway.certGenJob.kubeResourceOverride -}}
{{- end -}}
{{- include "gloo.util.merge" (list . $kubeResourceOverride "gloo.gatewayCertGenJobSpec") -}}
